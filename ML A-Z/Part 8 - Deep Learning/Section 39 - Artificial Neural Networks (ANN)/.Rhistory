x <- c(-0.5, 0, 1, 1, 1.5)
y <- c(0, 0,2,0,0)
plot(x, y, lwd = 3, frame = FALSE, type = "1")
plot(x, y, lwd = 3, frame = FALSE, type = "l")
pbeta(0.75,2,1)
exit()
exit
quit()
print("Hellow World")
setwd("~/Google Drive/learn-to-learn/machine-learning/udemy/Machine Learning A-Z/Part 8 - Deep Learning/Section 39 - Artificial Neural Networks (ANN)")
dataset = read.csv('Churn_Modelling.csv')
dataset = dataset[4:14]
dataset$Geography = as.numeric(factor(dataset$Geography,
levels = c('France','Spain','Germany'),
labels = c(1,2,3)))
dataset$Gender  = as.numeric(factor(dataset$Gender,
levels = c('Male','Female'),
labels = c(1,2)))
library(caTools)
set.seed(123)
split = sample.split(dataset$Exited, SplitRatio = 0.8)
training_set = subset(dataset, split==TRUE)
test_set = subset(dataset, split==FALSE)
training_set[-11] = scale(training_set[-11])
test_set[-11] = scale(test_set[-11])
library(h2o)
install.packages('h2o')
library(h2o)
h2o.init(nthreads = -1)
/urs/bin/java
library(h2o)
h2o.init(nthreads = -1)
classifier = h2o.deeplearning( y = 'Exited',
training_frame = as.h2o(training_set),
activation = 'Rectifier',
hidden = c(6,6),
epochs = 100,
train_per_interaction = -2)
classifier = h2o.deeplearning( y = 'Exited',
training_frame = as.h2o(training_set),
activation = 'Rectifier',
hidden = c(6,6),
epochs = 100,
train_samples_per_interaction = -2)
classifier = h2o.deeplearning( y = 'Exited',
training_frame = as.h2o(training_set),
activation = 'Rectifier',
hidden = c(6,6),
epochs = 100,
train_samples_per_interation = -2)
classifier = h2o.deeplearning( y = 'Exited',
training_frame = as.h2o(training_set),
activation = 'Rectifier',
hidden = c(6,6),
epochs = 100,
train_samples_per_iteration = -2)
prob_pred = predict(classifier, type ='response', newdata = test_set[-3])
prob_pred = h2o.predict(classifier, newdata = test_set[-11])
prob_pred = h2o.predict(classifier, newdata = as.h2o(test_set[-11]))
y_pred = ifelse(prob_pred > 0.5, 1, 0)
cm = table(test_set[,3], y_pred)
y_pred = ifelse(prob_pred > 0.5, 1, 0)
y_pred
test[,3]
test_set[,3]
test_set[,11]
test_set[:11]
test_set[:,11]
test_set[,11]
cm = table(test_set[, 11], y_pred)
y_pred = (prob_pred > 0.5)
y_pred
y_pred = as.vector((y_pred))
y_pred
test_set[, 11]
cm = table(test_set[, 11], y_pred)
cm
(1532+199)/2000
h2o.shutdown()
