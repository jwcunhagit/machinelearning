x <- c(-0.5, 0, 1, 1, 1.5)
y <- c(0, 0,2,0,0)
plot(x, y, lwd = 3, frame = FALSE, type = "1")
plot(x, y, lwd = 3, frame = FALSE, type = "l")
pbeta(0.75,2,1)
exit()
exit
quit()
print("Hellow World")
library(arules)
dataset = read.csv('Market_Basket_Optimisation.csv', header = FALSE)
dataset = read.transactions('Market_Basket_Optimisation.csv', sep = ',', rm.duplicates = TRUE)
summary(dataset)
itemFrequencyPlot(dataset, topN = 10)
library(arules)
dataset = read.csv('Market_Basket_Optimisation.csv', header = FALSE)
setwd("~/Google Drive/learn-to-learn/machine-learning/udemy/Machine Learning A-Z/Part 5 - Association Rule Learning/Section 28 - Apriori")
dataset = read.csv('Market_Basket_Optimisation.csv', header = FALSE)
dataset = read.transactions('Market_Basket_Optimisation.csv', sep = ',', rm.duplicates = TRUE)
dataset = read.transactions('Market_Basket_Optimisation.csv', sep = ',', rm.duplicates = TRUE)
dataset = read.csv('Market_Basket_Optimisation.csv', header = FALSE)
View(dataset)
dataset = read.csv('Market_Basket_Optimisation.csv')
View(dataset)
dataset = read.csv('Market_Basket_Optimisation.csv', header = FALSE)
View(dataset)
dataset = read.transactions('Market_Basket_Optimisation.csv', sep = ',', rm.duplicates = TRUE)
dataset
summary(dataset)
itemFrequencyPlot(dataset, topN = 10)
itemFrequencyPlot(dataset, topN = 100)
itemFrequencyPlot(dataset, topN = 20)
rules = apriori(data = dataset, parameter = list(support = 0.004, confidence = 0.2))
inspect(sort(rules, by = 'lift')[1:10])
3*7/7500
rules = apriori(data = dataset, parameter = list(support = 0.03, confidence = 0.8))
inspect(sort(rules, by = 'lift')[1:10])
rules = apriori(data = dataset, parameter = list(support = 0.03, confidence = 0.8))
inspect(sort(rules, by = 'lift')[1:10])
dataset = read.csv('Market_Basket_Optimisation.csv', header = FALSE)
dataset = read.transactions('Market_Basket_Optimisation.csv', sep = ',', rm.duplicates = TRUE)
summary(dataset)
itemFrequencyPlot(dataset, topN = 10)
rules = apriori(data = dataset, parameter = list(support = 0.03, confidence = 0.8))
inspect(sort(rules, by = 'lift')[1:10])
rules = apriori(data = dataset, parameter = list(support = 0.03, confidence = 0.4))
inspect(sort(rules, by = 'lift')[1:10])
rules = apriori(data = dataset, parameter = list(support = 0.03, confidence = 0.3))
inspect(sort(rules, by = 'lift')[1:10])
rules = apriori(data = dataset, parameter = list(support = 0.03, confidence = 0.2))
inspect(sort(rules, by = 'lift')[1:10])
rules = apriori(data = dataset, parameter = list(support = 0.03, confidence = 0.1))
inspect(sort(rules, by = 'lift')[1:10])
rules = apriori(data = dataset, parameter = list(support = 0.03, confidence = 0.4))
rules = apriori(data = dataset, parameter = list(support = 0.03, confidence = 0.6))
rules = apriori(data = dataset, parameter = list(support = 0.03, confidence = 0.4))
inspect(sort(rules, by = 'lift')[1:10])
rules = apriori(data = dataset, parameter = list(support = 0.03, confidence = 0.2))
inspect(sort(rules, by = 'lift')[1:10])
dataset = read.csv('Market_Basket_Optimisation.csv', header = FALSE)
dataset = read.transactions('Market_Basket_Optimisation.csv', sep = ',', rm.duplicates = TRUE)
summary(dataset)
itemFrequencyPlot(dataset, topN = 10)
rules = apriori(data = dataset, parameter = list(support = 0.03, confidence = 0.4))
rules = apriori(data = dataset, parameter = list(support = 0.03, confidence = 0.2))
inspect(sort(rules, by = 'lift')[1:10])
rules = apriori(data = dataset, parameter = list(support = 0.003, confidence = 0.2))
inspect(sort(rules, by = 'lift')[1:10])
rules = apriori(data = dataset, parameter = list(support = 0.003, confidence = 0.4))
inspect(sort(rules, by = 'lift')[1:10])
rules = apriori(data = dataset, parameter = list(support = 0.003, confidence = 0.2))
inspect(sort(rules, by = 'lift')[1:10])
rules = apriori(data = dataset, parameter = list(support = 0.004, confidence = 0.2))
inspect(sort(rules, by = 'lift')[1:10])
rules = apriori(data = dataset, parameter = list(support = 0.004, confidence = 0.2))
inspect(sort(rules, by = 'lift')[1:10])
