x <- c(-0.5, 0, 1, 1, 1.5)
y <- c(0, 0,2,0,0)
plot(x, y, lwd = 3, frame = FALSE, type = "1")
plot(x, y, lwd = 3, frame = FALSE, type = "l")
pbeta(0.75,2,1)
exit()
exit
quit()
print("Hellow World")
setwd("~/Google Drive/learn-to-learn/machine-learning/udemy/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 5 - Multiple Linear Regression")
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
# Data Preprocessing Template
# Importing the dataset
dataset = read.csv('50_Startups.csv')
View(dataset)
View(dataset)
View(dataset)
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
View(dataset)
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(test_set)
regrossor = lm(formula = Profit ˜ .)
regrossor = lm(formula = Profit ˜ .)
regressor = lm(formula = Profit ~ .)
regressor = lm(formula = Profit ~ .,
data = training_set)
summary(regressor)
View(dataset)
View(dataset)
regressor = lm(formula = Profit ~ R.D.Spend,
data = training_set)
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
y_pred
View(test_set)
View(test_set)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + MarketingSpend + State,
data = dataset)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend,
data = dataset)
summary(regressor)
setwd("~/Google Drive/learn-to-learn/machine-learning/udemy/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 6 - Polynomial Regression")
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
View(dataset)
lin_reg = lm(formula = salary ~ .,
data = dataset)
lin_reg = lm(formula = Salary ~ .,
data = dataset)
summary(lin_reg)
dataset$Level2 = dataset$Level^2
View(dataset)
pol_reg = lm(formula = Salary ~ .,
data = dataset)
summary(pol_reg)
dataset$Level3 = dataset$Level^3
View(dataset)
pol_reg = lm(formula = Salary ~ .,
data = dataset)
summary(pol_reg)
dataset$Level4 = dataset$Level^4
pol_reg = lm(formula = Salary ~ .,
data = dataset)
summary(pol_reg)
dataset$Level5 = dataset$Level^5
pol_reg = lm(formula = Salary ~ .,
data = dataset)
summary(pol_reg)
dataset$Level6 = dataset$Level^6
pol_reg = lm(formula = Salary ~ .,
data = dataset)
summary(pol_reg)
library("ggplot2", lib.loc="~/anaconda/lib/R/library")
detach("package:ggplot2", unload=TRUE)
library(ggplot2)
gplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colours = 'red')  +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colours = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
yLab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colours = 'red')  +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colours = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
yLab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colours = 'red')  +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colours = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
yLab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')  +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
yLab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')  +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
# Polynomial Regression
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
#Splitting tge dataset into the Training set and Test set
#we don't need to perform it
# Fitting Linear Regression to the dataset
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Fitting Polynomial Regression to the dataset
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
dataset$Level5 = dataset$Level^5
dataset$Level6 = dataset$Level^6
poly_reg = lm(formula = Salary ~ .,
data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
#Splitting tge dataset into the Training set and Test set
#we don't need to perform it
# Fitting Linear Regression to the dataset
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Fitting Polynomial Regression to the dataset
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
#dataset$Level4 = dataset$Level^4
#dataset$Level5 = dataset$Level^5
#dataset$Level6 = dataset$Level^6
poly_reg = lm(formula = Salary ~ .,
data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
dataset$Level4 = dataset$Level^4
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
dataset$Level5 = dataset$Level^5
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
dataset$Level5 = dataset$Level^5
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
dataset$Level6 = dataset$Level^6
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
#Splitting tge dataset into the Training set and Test set
#we don't need to perform it
# Fitting Linear Regression to the dataset
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Fitting Polynomial Regression to the dataset
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
#dataset$Level4 = dataset$Level^4
#dataset$Level5 = dataset$Level^5
#dataset$Level6 = dataset$Level^6
poly_reg = lm(formula = Salary ~ .,
data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
dataset$Level5 = dataset$Level^5
#dataset$Level6 = dataset$Level^6
poly_reg = lm(formula = Salary ~ .,
data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
y_pred = predict(lin_reg, data.frame(Level=6.5))
View(dataset)
View(dataset)
y_pred = predict(poly_reg, data.frame(Level=6.5))
y_pred = predict(poly_reg, data.frame(Level=6.5,
Level2=6.5^2,
Level3=6.5^3,
Level4=6.5^4))
y_pred = predict(poly_reg, data.frame(Level=6.5,
Level2=6.5^2,
Level3=6.5^3,
Level4=6.5^4,
Level5=6.5^5))
View(dataset)
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
#Splitting tge dataset into the Training set and Test set
#we don't need to perform it
# Fitting Linear Regression to the dataset
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Fitting Polynomial Regression to the dataset
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
#dataset$Level5 = dataset$Level^5
#dataset$Level6 = dataset$Level^6
poly_reg = lm(formula = Salary ~ .,
data = dataset)
y_pred = predict(poly_reg, data.frame(Level=6.5,
Level2=6.5^2,
Level3=6.5^3,
Level4=6.5^4))
